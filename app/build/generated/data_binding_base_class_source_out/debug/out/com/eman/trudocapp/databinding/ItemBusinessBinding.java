// Generated by data binding compiler. Do not edit!
package com.eman.trudocapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RatingBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.eman.trudocapp.R;
import com.eman.trudocapp.domain.model.Business;
import com.eman.trudocapp.presentation.NavigationListener;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ItemBusinessBinding extends ViewDataBinding {
  @NonNull
  public final AppCompatImageView businessImg;

  @NonNull
  public final RatingBar rating;

  @NonNull
  public final TextView titleText;

  @NonNull
  public final TextView txtCategory;

  @NonNull
  public final TextView txtCount;

  @NonNull
  public final TextView txtPrice;

  @Bindable
  protected Business mBusinessApi;

  @Bindable
  protected NavigationListener mListener;

  protected ItemBusinessBinding(Object _bindingComponent, View _root, int _localFieldCount,
      AppCompatImageView businessImg, RatingBar rating, TextView titleText, TextView txtCategory,
      TextView txtCount, TextView txtPrice) {
    super(_bindingComponent, _root, _localFieldCount);
    this.businessImg = businessImg;
    this.rating = rating;
    this.titleText = titleText;
    this.txtCategory = txtCategory;
    this.txtCount = txtCount;
    this.txtPrice = txtPrice;
  }

  public abstract void setBusinessApi(@Nullable Business businessApi);

  @Nullable
  public Business getBusinessApi() {
    return mBusinessApi;
  }

  public abstract void setListener(@Nullable NavigationListener listener);

  @Nullable
  public NavigationListener getListener() {
    return mListener;
  }

  @NonNull
  public static ItemBusinessBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_business, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ItemBusinessBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ItemBusinessBinding>inflateInternal(inflater, R.layout.item_business, root, attachToRoot, component);
  }

  @NonNull
  public static ItemBusinessBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_business, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ItemBusinessBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ItemBusinessBinding>inflateInternal(inflater, R.layout.item_business, null, false, component);
  }

  public static ItemBusinessBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ItemBusinessBinding bind(@NonNull View view, @Nullable Object component) {
    return (ItemBusinessBinding)bind(component, view, R.layout.item_business);
  }
}
